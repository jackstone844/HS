{"version":3,"sources":["scripts.min.js","app.js","authservice.js","dataservice.js","router.js","index/controller.js","login/controller.js","profile/controller.js"],"names":["angular","module","config","appName","authDomain","databaseURL","storageBucket","apiKey","firebase","initializeApp","factory","Auth","$inject","$http","$firebaseAuth","auth","dataservice","getData","a","b","c","url","method","params","uniqueId","pageId","sessionId","then","getDataComplete","response","data","$stateProvider","$urlRouterProvider","otherwise","state","templateUrl","controller","resolve","requireNoAuth","$state","$requireSignIn","go","error","requireAuth","localStorage","getItem","removeItem","setTimeout","indexController","$injext","loginController","$scope","$httpParamSerializer","user","email","password","login","$signInWithEmailAndPassword","console","log","uid","$getAuth","getJWT","err","message","headers","transformRequest","res","authenticated","token","validJWT","setItem","$signOut","profileController","userDetails","refreshToken","logout"],"mappings":"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","file":"scripts.min.js","sourcesContent":["'use strict';\n\n(function () {\n    angular.module('app', ['ui.router', 'firebase']).config(function () {\n        var config = {\n            appName: 'Hackney Social',\n            authDomain: 'hackneysocial-71b7f.firebaseapp.com',\n            databaseURL: 'https://hackneysocial-71b7f.firebaseio.com',\n            storageBucket: 'hackneysocial-71b7f.appspot.com',\n            apiKey: 'AIzaSyDTzHwzw-achZtFPdRLmZjnFnKrwf0_Exw'\n        };\n        firebase.initializeApp(config);\n    });\n})();\n\nangular.module('app').factory('Auth', Auth);\n\nAuth.$inject = ['$http', '$firebaseAuth'];\n\nfunction Auth($http, $firebaseAuth) {\n    var auth = $firebaseAuth();\n\n    return auth;\n}\n\nangular.module('app').factory('dataservice', dataservice);\n\ndataservice.$inject = ['$http'];\n\nfunction dataservice($http) {\n    return {\n        getData: getData\n    };\n\n    function getData(a, b, c) {\n        return $http({\n            url: '/api',\n            method: 'GET',\n            params: {\n                uniqueId: a,\n                pageId: b,\n                sessionId: c\n            }\n        }).then(getDataComplete);\n\n        function getDataComplete(response) {\n            return response.data;\n        }\n    }\n}\n(function () {\n    'use strict';\n\n    angular.module('app').config(function ($stateProvider, $urlRouterProvider) {\n\n        $urlRouterProvider.otherwise('/');\n\n        $stateProvider.state('welcome', {\n            url: '/',\n            templateUrl: 'index/template.html',\n            controller: 'indexController'\n        }).state('login', {\n            url: '/admin/login',\n            controller: 'loginController',\n            templateUrl: 'login/template.html',\n            resolve: {\n                requireNoAuth: function requireNoAuth($state, Auth) {\n                    return Auth.$requireSignIn().then(function (auth) {\n                        $state.go('admin');\n                    }, function (error) {\n                        return;\n                    });\n                }\n            }\n        }).state('admin', {\n            url: '/admin/profile',\n            controller: 'profileController',\n            templateUrl: 'profile/template.html',\n            resolve: {\n                requireAuth: function requireAuth($state, Auth) {\n                    return Auth.$requireSignIn().then(function (auth) {\n                        return;\n                    }, function (error) {\n                        if (localStorage.getItem('HSToken')) {\n                            localStorage.removeItem('HSToken');\n                            setTimeout(function () {\n                                $state.go('login');\n                            }, 500);\n                        } else {\n                            $state.go('login');\n                        }\n                    });\n                }\n                // IF NO HSToken -> push to login\n            }\n        });\n    });\n})();\n(function () {\n    'use strict';\n\n    angular.module('app').controller('indexController', indexController);\n\n    indexController.$injext = [];\n\n    function indexController() {\n        // no functions to call in the index\n    }\n})();\n(function () {\n    //'use strict';\n\n    angular.module('app').controller('loginController', loginController);\n\n    loginController.$inject = ['$scope', 'Auth', '$state', '$http', '$httpParamSerializer'];\n\n    function loginController($scope, Auth, $state, $http, $httpParamSerializer) {\n\n        $scope.user = {\n            email: '',\n            password: ''\n        };\n\n        $scope.login = function () {\n            Auth.$signInWithEmailAndPassword($scope.user.email, $scope.user.password).then(function (auth) {\n                console.log('User logged in to Firebase');\n\n                /* lets get a ref to the signed in user's uid and pass it to getJWT */\n                var uid = Auth.$getAuth().uid;\n                getJWT(uid);\n            }, function (err) {\n                console.log(err.message);\n                $scope.err = err;\n            });\n\n            var getJWT = function getJWT(uid) {\n\n                return $http({\n                    url: '/api/authenticate',\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                    transformRequest: $httpParamSerializer,\n                    data: {\n                        \"uid\": uid\n                    }\n                }).then(function (res) {\n                    if (res.data.authenticated == true) {\n                        /* If successful, log jwt and bind it to the scope */\n                        console.log(res.data.token);\n                        var validJWT = res.data.token;\n                        /* push validJWT to local storage  */\n                        localStorage.setItem('HSToken', validJWT);\n                        /* push user to their profile view */\n                        $state.go('admin');\n                    } else {\n                        /* sign user out as not authenticated on server */\n                        Auth.$signOut().then(function () {\n                            console.log('no token recieved');\n                        });\n                    }\n                }, function (err) {\n                    console.log(err);\n                });\n            };\n        };\n    }\n})();\n(function () {\n    'use strict';\n\n    angular.module('app').controller('profileController', profileController);\n\n    profileController.$injext = ['$scope', 'Auth', '$state'];\n\n    function profileController($scope, Auth, $state) {\n\n        $scope.userDetails = {\n            uid: Auth.$getAuth().uid,\n            token: Auth.$getAuth().refreshToken\n        };\n\n        $scope.logout = function () {\n            Auth.$signOut().then(function () {\n                localStorage.removeItem('HSToken');\n                setTimeout(function () {\n                    $state.go('login');\n                }, 500);\n            });\n        };\n    }\n})();","(function() {\n    angular\n        .module('app', [\n            'ui.router',\n            'firebase'\n        ])\n        .config(function(){\n            var config = {\n                appName: 'Hackney Social',\n                authDomain: 'hackneysocial-71b7f.firebaseapp.com',\n                databaseURL: 'https://hackneysocial-71b7f.firebaseio.com',\n                storageBucket: 'hackneysocial-71b7f.appspot.com',\n                apiKey: 'AIzaSyDTzHwzw-achZtFPdRLmZjnFnKrwf0_Exw'\n            };\n            firebase.initializeApp(config);\n        });\n})();\n","angular\n    .module('app')\n    .factory('Auth', Auth);\n\n    Auth.$inject = ['$http', '$firebaseAuth'];\n\n    function Auth($http, $firebaseAuth) {\n        var auth = $firebaseAuth();\n        \n        return auth;\n\n    }\n        ","angular\n    .module('app')\n    .factory('dataservice', dataservice);\n\n    dataservice.$inject = ['$http'];\n\n    function dataservice($http) {\n        return {\n            getData : getData\n        };\n\n        function getData(a, b, c) {\n            return $http({\n                url: '/api',\n                method: 'GET',\n                params: {\n                    uniqueId : a,\n                    pageId : b,\n                    sessionId : c\n                }\n            })\n            .then(getDataComplete);\n\n            function getDataComplete(response) {\n                return response.data;\n            }\n        }\n\n    }","(function(){\n    'use strict';\n\n    angular\n        .module('app')\n        .config(function($stateProvider, $urlRouterProvider){\n\n            $urlRouterProvider\n                .otherwise('/');\n\n            $stateProvider\n                .state('welcome', {\n                    url: '/',\n                    templateUrl: 'index/template.html',\n                    controller: 'indexController'\n                })\n                .state('login', {\n                    url: '/admin/login',\n                    controller: 'loginController',\n                    templateUrl: 'login/template.html',\n                    resolve: {\n                        requireNoAuth: function($state, Auth) {\n                            return Auth.$requireSignIn().then(function(auth){\n                                $state.go('admin');\n                            }, function(error){\n                                return;\n                            });\n                        }\n                    }\n                })\n                .state('admin', {\n                    url: '/admin/profile',\n                    controller: 'profileController',\n                    templateUrl: 'profile/template.html',\n                    resolve: {\n                        requireAuth: function($state, Auth) {\n                            return Auth.$requireSignIn().then(function(auth){\n                                return;\n                            }, function(error){\n                                if (localStorage.getItem('HSToken')) {\n                                    localStorage.removeItem('HSToken');\n                                    setTimeout(function() {\n                                        $state.go('login');\n                                    }, 500);\n                                } else {\n                                    $state.go('login');\n                                }     \n                            });\n                        }\n                        // IF NO HSToken -> push to login\n                    }\n                });\n        });\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('app')\n        .controller('indexController', indexController);\n\n        indexController.$injext = [];\n\n        function indexController () {\n            // no functions to call in the index\n        }\n})();","(function() {\n    //'use strict';\n\n    angular\n        .module('app')\n        .controller('loginController', loginController);\n\n        loginController.$inject = ['$scope', 'Auth', '$state', '$http', '$httpParamSerializer'];\n\n        function loginController ($scope, Auth, $state, $http, $httpParamSerializer) {\n\n            $scope.user = {\n                email: '',\n                password: '',\n            };\n\n            $scope.login = function(){\n                Auth.$signInWithEmailAndPassword($scope.user.email, $scope.user.password)\n                .then(function(auth){\n                    console.log('User logged in to Firebase');\n                    \n                    /* lets get a ref to the signed in user's uid and pass it to getJWT */\n                    var uid = Auth.$getAuth().uid;\n                    getJWT(uid);\n                    \n                }, function(err) {\n                    console.log(err.message);\n                    $scope.err = err;\n                });\n\n            \n            var getJWT = function(uid) {\n        \n                return $http({\n                    url: '/api/authenticate',\n                    method: 'POST',\n                    headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n                    transformRequest: $httpParamSerializer,\n                    data: {\n                        \"uid\": uid\n                      }\n                })\n                .then(function(res){\n                    if (res.data.authenticated == true) {   \n                        /* If successful, log jwt and bind it to the scope */\n                        console.log(res.data.token);\n                        var validJWT = res.data.token;\n                        /* push validJWT to local storage  */\n                        localStorage.setItem('HSToken', validJWT);\n                        /* push user to their profile view */\n                        $state.go('admin');\n                    } else {\n                        /* sign user out as not authenticated on server */\n                        Auth.$signOut()\n                        .then(function(){\n                            console.log('no token recieved');\n                        });\n                    }\n                }, function(err){\n                    console.log(err);\n                });\n            };\n  \n        };\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('app')\n        .controller('profileController', profileController);\n\n        profileController.$injext = ['$scope', 'Auth', '$state'];\n\n        function profileController ($scope, Auth, $state) {\n            \n            $scope.userDetails = {\n                uid : Auth.$getAuth().uid,\n                token : Auth.$getAuth().refreshToken\n            };\n\n            $scope.logout = function() {\n                Auth.$signOut()\n                .then(function(){\n                    localStorage.removeItem('HSToken');\n                    setTimeout(function() {\n                        $state.go('login');\n                    }, 500);\n                });\n            };\n\n        }\n})();"],"sourceRoot":"/source/js"}